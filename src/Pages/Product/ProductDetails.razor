@page "/Produto/{ProductName}/Detalhes"
@inject IProductService productService

<h3>Detalhes do Produto "@ProductName"</h3>

@if (Produto == null)
{
    <h2>Carregando...</h2>
}
else
{
<div class="col-md-12 row">
    <div class="col-md-2"></div>
    <div class="col-md-4 ml-auto mr-0">
        <div class="form-group">
            <label>Nome do Produto:</label>
            <input type="text" disabled value="@Produto.ProductName"/>
        </div>
        <div class="form-group">
            <label>Tipo de Produto:</label>
            <input type="text" disabled value="@Produto.ProductType"/>
        </div>
        <div class="form-group">
            <label>Quantidade a ser Cadastrada (Unidades): </label>
            <input type="text" disabled value="@Produto.Stock"/>
        </div>
        <div class="form-group">
            <label>Preço Unitário (R$):</label>
            <input type="text" disabled value="@Produto.Price"/>
        </div>
        <div class="form-group">
            <label>Descrição do Produto:</label>
            <textarea type="" disabled value="@Produto.Description" style="width:400px; height:60px"/>
        </div>
        <button class="btn btn-cor-especial py-3" type="submit">Adicionar ao Carrinho</button>
    </div>
    <div class="col-md-3" style="border-left: thick solid #808080">
        @if (Produto.ImageSource != null)
        {
            <div class="prod-cadastro-img" style="margin-top:100px">
                <img class="d-block w-100 h-100" style="object-fit:cover" src="@Produto.ImageSource" alt="Imagem do Produto a ser cadastrado">
            </div>
        }
    </div>
    <div class="col-md-3"></div>
</div>
}

@code {
    [Parameter]
    public string ProductName { get; set; }

    private Product Produto { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Produto = await productService.GetProductByName(ProductName);
    }
}
