@inject IJSRuntime js

<div id="@CarouselId" class="carousel slide" data-ride="carousel" data-interval="3000" data-pause="hover">
    <ol class="carousel-indicators">
        @IndicatorsTemplate
    </ol>
    <div class="carousel-inner" role="listbox">
        @ImagesTemplate
    </div>
    <a class="carousel-control-prev" href="#@CarouselId" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#@CarouselId" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

@code{
    [Parameter] public string CarouselId { get; set; }
    [Parameter] public RenderFragment IndicatorsTemplate { get; set; }
    [Parameter] public RenderFragment ImagesTemplate { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("InitializeCarousel");
        }
    }
}